-- Phase 3: Enterprise Monitoring & Phase 4: Disaster Recovery
-- Monitoring Infrastructure Tables

-- Metrics Collection System (Prometheus-style)
CREATE TABLE public.metrics_collection (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  metric_name TEXT NOT NULL,\n  metric_type TEXT NOT NULL, -- 'counter', 'gauge', 'histogram', 'summary'\n  metric_value NUMERIC NOT NULL,\n  labels JSONB NOT NULL DEFAULT '{}',\n  service_name TEXT NOT NULL,\n  instance_id TEXT,\n  timestamp TIMESTAMPTZ NOT NULL DEFAULT now(),\n  retention_period INTERVAL DEFAULT '30 days'\n);\n\n-- Business Dashboards Configuration\nCREATE TABLE public.business_dashboards (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  dashboard_name TEXT NOT NULL,\n  dashboard_type TEXT NOT NULL, -- 'executive', 'vendor', 'operational', 'financial'\n  panels JSONB NOT NULL DEFAULT '[]',\n  data_sources JSONB NOT NULL DEFAULT '[]',\n  refresh_interval INTEGER DEFAULT 300, -- seconds\n  access_permissions JSONB NOT NULL DEFAULT '{}',\n  is_active BOOLEAN DEFAULT true,\n  created_by UUID,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\n-- Distributed Tracing (Jaeger-style)\nCREATE TABLE public.distributed_traces (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  trace_id TEXT NOT NULL,\n  span_id TEXT NOT NULL,\n  parent_span_id TEXT,\n  operation_name TEXT NOT NULL,\n  service_name TEXT NOT NULL,\n  start_time TIMESTAMPTZ NOT NULL,\n  end_time TIMESTAMPTZ,\n  duration_ms INTEGER,\n  tags JSONB DEFAULT '{}',\n  logs JSONB DEFAULT '[]',\n  status TEXT DEFAULT 'ok', -- 'ok', 'error', 'timeout'\n  error_message TEXT,\n  baggage JSONB DEFAULT '{}'\n);\n\n-- Centralized Logging (ELK-style)\nCREATE TABLE public.centralized_logs (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  log_level TEXT NOT NULL, -- 'debug', 'info', 'warn', 'error', 'fatal'\n  service_name TEXT NOT NULL,\n  instance_id TEXT,\n  message TEXT NOT NULL,\n  structured_data JSONB DEFAULT '{}',\n  request_id TEXT,\n  user_id UUID,\n  ip_address INET,\n  user_agent TEXT,\n  stack_trace TEXT,\n  correlation_id TEXT,\n  business_context JSONB DEFAULT '{}',\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\n-- SLA Monitoring & Alerting\nCREATE TABLE public.sla_configurations (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  service_name TEXT NOT NULL,\n  sla_type TEXT NOT NULL, -- 'availability', 'response_time', 'error_rate', 'throughput'\n  target_value NUMERIC NOT NULL,\n  warning_threshold NUMERIC NOT NULL,\n  critical_threshold NUMERIC NOT NULL,\n  measurement_window INTERVAL NOT NULL DEFAULT '5 minutes',\n  evaluation_frequency INTERVAL NOT NULL DEFAULT '1 minute',\n  escalation_policy JSONB NOT NULL DEFAULT '{}',\n  is_active BOOLEAN DEFAULT true,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\nCREATE TABLE public.sla_violations (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  sla_config_id UUID NOT NULL REFERENCES public.sla_configurations(id),\n  violation_type TEXT NOT NULL, -- 'warning', 'critical'\n  current_value NUMERIC NOT NULL,\n  expected_value NUMERIC NOT NULL,\n  duration_minutes INTEGER NOT NULL,\n  impact_assessment JSONB DEFAULT '{}',\n  root_cause_analysis JSONB DEFAULT '{}',\n  mitigation_actions JSONB DEFAULT '[]',\n  status TEXT DEFAULT 'open', -- 'open', 'acknowledged', 'resolved'\n  acknowledged_by UUID,\n  acknowledged_at TIMESTAMPTZ,\n  resolved_by UUID,\n  resolved_at TIMESTAMPTZ,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\nCREATE TABLE public.alert_rules (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  rule_name TEXT NOT NULL,\n  rule_type TEXT NOT NULL, -- 'threshold', 'anomaly', 'trend', 'composite'\n  conditions JSONB NOT NULL,\n  severity TEXT NOT NULL, -- 'info', 'warning', 'critical', 'emergency'\n  notification_channels JSONB NOT NULL DEFAULT '[]',\n  escalation_rules JSONB NOT NULL DEFAULT '{}',\n  suppression_rules JSONB DEFAULT '{}',\n  runbook_url TEXT,\n  is_active BOOLEAN DEFAULT true,\n  created_by UUID,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\nCREATE TABLE public.alert_instances (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  alert_rule_id UUID NOT NULL REFERENCES public.alert_rules(id),\n  status TEXT NOT NULL DEFAULT 'firing', -- 'firing', 'resolved', 'silenced'\n  severity TEXT NOT NULL,\n  summary TEXT NOT NULL,\n  description TEXT,\n  trigger_value NUMERIC,\n  labels JSONB DEFAULT '{}',\n  annotations JSONB DEFAULT '{}',\n  fired_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  resolved_at TIMESTAMPTZ,\n  escalated_at TIMESTAMPTZ,\n  escalation_level INTEGER DEFAULT 0,\n  notification_history JSONB DEFAULT '[]'\n);\n\n-- Phase 4: Disaster Recovery Infrastructure\n\n-- Multi-Region Database Replication\nCREATE TABLE public.database_replicas (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  replica_name TEXT NOT NULL,\n  region TEXT NOT NULL,\n  replica_type TEXT NOT NULL, -- 'read_replica', 'standby', 'hot_standby', 'warm_standby'\n  primary_endpoint TEXT NOT NULL,\n  replica_endpoint TEXT NOT NULL,\n  replication_lag_ms INTEGER,\n  last_sync_at TIMESTAMPTZ,\n  health_status TEXT DEFAULT 'healthy', -- 'healthy', 'degraded', 'failed'\n  failover_priority INTEGER DEFAULT 1,\n  auto_failover_enabled BOOLEAN DEFAULT false,\n  configuration JSONB NOT NULL DEFAULT '{}',\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\n-- Automated Backup Strategies\nCREATE TABLE public.backup_policies (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  policy_name TEXT NOT NULL,\n  backup_type TEXT NOT NULL, -- 'full', 'incremental', 'differential', 'log'\n  frequency INTERVAL NOT NULL,\n  retention_period INTERVAL NOT NULL,\n  storage_location TEXT NOT NULL,\n  encryption_enabled BOOLEAN DEFAULT true,\n  compression_enabled BOOLEAN DEFAULT true,\n  verification_enabled BOOLEAN DEFAULT true,\n  cross_region_copy BOOLEAN DEFAULT false,\n  target_regions JSONB DEFAULT '[]',\n  backup_window TEXT, -- preferred backup time window\n  is_active BOOLEAN DEFAULT true,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\nCREATE TABLE public.backup_executions (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  policy_id UUID NOT NULL REFERENCES public.backup_policies(id),\n  backup_name TEXT NOT NULL,\n  backup_type TEXT NOT NULL,\n  status TEXT NOT NULL DEFAULT 'running', -- 'running', 'completed', 'failed', 'cancelled'\n  start_time TIMESTAMPTZ NOT NULL DEFAULT now(),\n  end_time TIMESTAMPTZ,\n  backup_size_bytes BIGINT,\n  compressed_size_bytes BIGINT,\n  storage_path TEXT,\n  verification_status TEXT, -- 'pending', 'passed', 'failed'\n  error_message TEXT,\n  metadata JSONB DEFAULT '{}',\n  recovery_point_objective TIMESTAMPTZ,\n  next_scheduled_backup TIMESTAMPTZ\n);\n\n-- Service Failover Mechanisms\nCREATE TABLE public.failover_configurations (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  service_name TEXT NOT NULL,\n  primary_region TEXT NOT NULL,\n  secondary_regions JSONB NOT NULL DEFAULT '[]',\n  failover_mode TEXT NOT NULL, -- 'manual', 'automatic', 'assisted'\n  health_check_config JSONB NOT NULL,\n  failover_triggers JSONB NOT NULL DEFAULT '[]',\n  recovery_time_objective INTEGER NOT NULL, -- seconds\n  recovery_point_objective INTEGER NOT NULL, -- seconds\n  traffic_switching_method TEXT NOT NULL, -- 'dns', 'load_balancer', 'service_mesh'\n  rollback_procedure JSONB DEFAULT '{}',\n  notification_contacts JSONB DEFAULT '[]',\n  is_active BOOLEAN DEFAULT true,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\nCREATE TABLE public.failover_events (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  config_id UUID NOT NULL REFERENCES public.failover_configurations(id),\n  event_type TEXT NOT NULL, -- 'failover_initiated', 'failover_completed', 'fallback_initiated', 'fallback_completed'\n  trigger_reason TEXT NOT NULL,\n  source_region TEXT NOT NULL,\n  target_region TEXT NOT NULL,\n  initiated_by TEXT, -- 'system', 'user', 'alert'\n  initiated_by_user UUID,\n  status TEXT NOT NULL DEFAULT 'in_progress', -- 'in_progress', 'completed', 'failed', 'rolled_back'\n  start_time TIMESTAMPTZ NOT NULL DEFAULT now(),\n  end_time TIMESTAMPTZ,\n  downtime_seconds INTEGER,\n  affected_services JSONB DEFAULT '[]',\n  impact_assessment JSONB DEFAULT '{}',\n  lessons_learned TEXT,\n  post_mortem_url TEXT\n);\n\n-- Incident Response Procedures\nCREATE TABLE public.incident_response_plans (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  plan_name TEXT NOT NULL,\n  incident_category TEXT NOT NULL, -- 'security', 'performance', 'availability', 'data_loss'\n  severity_levels JSONB NOT NULL DEFAULT '[]',\n  response_procedures JSONB NOT NULL,\n  escalation_matrix JSONB NOT NULL,\n  communication_templates JSONB DEFAULT '{}',\n  required_roles JSONB DEFAULT '[]',\n  sla_targets JSONB DEFAULT '{}',\n  external_contacts JSONB DEFAULT '[]',\n  runbook_links JSONB DEFAULT '[]',\n  is_active BOOLEAN DEFAULT true,\n  version TEXT DEFAULT '1.0',\n  created_by UUID,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\nCREATE TABLE public.incident_records (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  incident_id TEXT NOT NULL UNIQUE,\n  title TEXT NOT NULL,\n  description TEXT NOT NULL,\n  severity TEXT NOT NULL, -- 'sev1', 'sev2', 'sev3', 'sev4'\n  status TEXT NOT NULL DEFAULT 'open', -- 'open', 'investigating', 'mitigating', 'resolved', 'closed'\n  category TEXT NOT NULL,\n  affected_services JSONB DEFAULT '[]',\n  customer_impact TEXT,\n  root_cause TEXT,\n  resolution_summary TEXT,\n  incident_commander UUID,\n  assigned_team JSONB DEFAULT '[]',\n  timeline JSONB DEFAULT '[]',\n  communication_log JSONB DEFAULT '[]',\n  metrics JSONB DEFAULT '{}', -- MTTD, MTTR, customer impact metrics\n  lessons_learned JSONB DEFAULT '[]',\n  action_items JSONB DEFAULT '[]',\n  post_mortem_url TEXT,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  resolved_at TIMESTAMPTZ,\n  closed_at TIMESTAMPTZ\n);\n\n-- System Health & Availability Tracking\nCREATE TABLE public.system_health_checks (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  service_name TEXT NOT NULL,\n  endpoint_url TEXT NOT NULL,\n  check_type TEXT NOT NULL, -- 'http', 'tcp', 'database', 'custom'\n  status TEXT NOT NULL, -- 'healthy', 'degraded', 'unhealthy'\n  response_time_ms INTEGER,\n  status_code INTEGER,\n  error_message TEXT,\n  health_score NUMERIC, -- 0-100\n  metadata JSONB DEFAULT '{}',\n  checked_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\nCREATE TABLE public.availability_tracking (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  service_name TEXT NOT NULL,\n  measurement_period INTERVAL NOT NULL,\n  total_requests BIGINT NOT NULL DEFAULT 0,\n  successful_requests BIGINT NOT NULL DEFAULT 0,\n  failed_requests BIGINT NOT NULL DEFAULT 0,\n  average_response_time_ms NUMERIC,\n  p95_response_time_ms NUMERIC,\n  p99_response_time_ms NUMERIC,\n  uptime_percentage NUMERIC,\n  error_rate_percentage NUMERIC,\n  sla_compliance BOOLEAN,\n  period_start TIMESTAMPTZ NOT NULL,\n  period_end TIMESTAMPTZ NOT NULL,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\n-- Enable RLS on all monitoring tables\nALTER TABLE public.metrics_collection ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.business_dashboards ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.distributed_traces ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.centralized_logs ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.sla_configurations ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.sla_violations ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.alert_rules ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.alert_instances ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.database_replicas ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.backup_policies ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.backup_executions ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.failover_configurations ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.failover_events ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.incident_response_plans ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.incident_records ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.system_health_checks ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.availability_tracking ENABLE ROW LEVEL SECURITY;\n\n-- Admin-only access policies for monitoring infrastructure\nCREATE POLICY \"Admin full access metrics_collection\" ON public.metrics_collection FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access business_dashboards\" ON public.business_dashboards FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access distributed_traces\" ON public.distributed_traces FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access centralized_logs\" ON public.centralized_logs FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access sla_configurations\" ON public.sla_configurations FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access sla_violations\" ON public.sla_violations FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access alert_rules\" ON public.alert_rules FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access alert_instances\" ON public.alert_instances FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access database_replicas\" ON public.database_replicas FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access backup_policies\" ON public.backup_policies FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access backup_executions\" ON public.backup_executions FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access failover_configurations\" ON public.failover_configurations FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access failover_events\" ON public.failover_events FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access incident_response_plans\" ON public.incident_response_plans FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access incident_records\" ON public.incident_records FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access system_health_checks\" ON public.system_health_checks FOR ALL USING (is_admin_user());\nCREATE POLICY \"Admin full access availability_tracking\" ON public.availability_tracking FOR ALL USING (is_admin_user());\n\n-- Create indexes for performance\nCREATE INDEX idx_metrics_collection_service_timestamp ON public.metrics_collection (service_name, timestamp DESC);\nCREATE INDEX idx_metrics_collection_metric_name ON public.metrics_collection (metric_name);\nCREATE INDEX idx_distributed_traces_trace_id ON public.distributed_traces (trace_id);\nCREATE INDEX idx_distributed_traces_service_time ON public.distributed_traces (service_name, start_time DESC);\nCREATE INDEX idx_centralized_logs_service_timestamp ON public.centralized_logs (service_name, created_at DESC);\nCREATE INDEX idx_centralized_logs_level ON public.centralized_logs (log_level);\nCREATE INDEX idx_sla_violations_config_created ON public.sla_violations (sla_config_id, created_at DESC);\nCREATE INDEX idx_alert_instances_status ON public.alert_instances (status);\nCREATE INDEX idx_system_health_checks_service_time ON public.system_health_checks (service_name, checked_at DESC);\n\n-- Create triggers for updated_at\nCREATE TRIGGER update_business_dashboards_updated_at BEFORE UPDATE ON public.business_dashboards FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\nCREATE TRIGGER update_sla_configurations_updated_at BEFORE UPDATE ON public.sla_configurations FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\nCREATE TRIGGER update_alert_rules_updated_at BEFORE UPDATE ON public.alert_rules FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\nCREATE TRIGGER update_database_replicas_updated_at BEFORE UPDATE ON public.database_replicas FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\nCREATE TRIGGER update_backup_policies_updated_at BEFORE UPDATE ON public.backup_policies FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\nCREATE TRIGGER update_failover_configurations_updated_at BEFORE UPDATE ON public.failover_configurations FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\nCREATE TRIGGER update_incident_response_plans_updated_at BEFORE UPDATE ON public.incident_response_plans FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\n\n-- Insert initial monitoring configurations\nINSERT INTO public.business_dashboards (dashboard_name, dashboard_type, panels, data_sources, access_permissions) VALUES\n('Executive Overview', 'executive', '[\n  {\"title\": \"Total Revenue\", \"type\": \"metric\", \"query\": \"revenue_total\"},\n  {\"title\": \"Active Users\", \"type\": \"metric\", \"query\": \"users_active\"},\n  {\"title\": \"Order Volume\", \"type\": \"chart\", \"query\": \"orders_count\"},\n  {\"title\": \"Vendor Performance\", \"type\": \"table\", \"query\": \"vendor_metrics\"}\n]', '[\n  {\"name\": \"metrics\", \"type\": \"prometheus\"},\n  {\"name\": \"business\", \"type\": \"database\"}\n]', '{\"roles\": [\"admin\", \"executive\"]}'),\n('Vendor Dashboard', 'vendor', '[\n  {\"title\": \"Sales Performance\", \"type\": \"chart\", \"query\": \"vendor_sales\"},\n  {\"title\": \"Product Views\", \"type\": \"metric\", \"query\": \"product_views\"},\n  {\"title\": \"Order Status\", \"type\": \"pie\", \"query\": \"order_status\"},\n  {\"title\": \"Commission Earnings\", \"type\": \"metric\", \"query\": \"commission_total\"}\n]', '[\n  {\"name\": \"vendor_metrics\", \"type\": \"database\"}\n]', '{\"roles\": [\"vendor\"]}'),\n('Operational Monitoring', 'operational', '[\n  {\"title\": \"System Health\", \"type\": \"status\", \"query\": \"system_health\"},\n  {\"title\": \"Response Times\", \"type\": \"chart\", \"query\": \"response_times\"},\n  {\"title\": \"Error Rates\", \"type\": \"chart\", \"query\": \"error_rates\"},\n  {\"title\": \"Active Alerts\", \"type\": \"list\", \"query\": \"active_alerts\"}\n]', '[\n  {\"name\": \"monitoring\", \"type\": \"prometheus\"},\n  {\"name\": \"logs\", \"type\": \"elasticsearch\"}\n]', '{\"roles\": [\"admin\", \"ops\"]}');\n\nINSERT INTO public.sla_configurations (service_name, sla_type, target_value, warning_threshold, critical_threshold) VALUES\n('user-service', 'availability', 99.9, 99.5, 99.0),\n('product-service', 'response_time', 500, 800, 1000),\n('order-service', 'availability', 99.95, 99.8, 99.5),\n('payment-service', 'availability', 99.99, 99.95, 99.9),\n('api-gateway', 'error_rate', 1.0, 2.0, 5.0);\n\nINSERT INTO public.alert_rules (rule_name, rule_type, conditions, severity, notification_channels) VALUES\n('High Error Rate', 'threshold', '{\"metric\": \"error_rate\", \"operator\": \">\", \"value\": 5}', 'critical', '[\"email\", \"slack\", \"sms\"]'),\n('Service Down', 'threshold', '{\"metric\": \"availability\", \"operator\": \"<\", \"value\": 95}', 'emergency', '[\"email\", \"slack\", \"sms\", \"phone\"]'),\n('High Response Time', 'threshold', '{\"metric\": \"response_time_p95\", \"operator\": \">\", \"value\": 2000}', 'warning', '[\"slack\"]'),\n('Database Connection Pool Full', 'threshold', '{\"metric\": \"db_connections\", \"operator\": \">\", \"value\": 90}', 'critical', '[\"email\", \"slack\"]');\n\nINSERT INTO public.backup_policies (policy_name, backup_type, frequency, retention_period, storage_location) VALUES\n('Daily Full Backup', 'full', '1 day', '30 days', 's3://backups/daily/'),\n('Hourly Incremental', 'incremental', '1 hour', '7 days', 's3://backups/incremental/'),\n('Weekly Archive', 'full', '7 days', '1 year', 's3://backups/archive/'),\n('Transaction Log Backup', 'log', '15 minutes', '3 days', 's3://backups/logs/');